/* eslint-disable @typescript-eslint/no-explicit-any */
import type { Metadata } from "next";
import "./globals.css";
import SmoothScroll from "./components/SmoothScroll";
import { Providers } from "./components/Providers";
import {NextIntlClientProvider} from 'next-intl';
import {getMessages} from 'next-intl/server';
import {notFound} from 'next/navigation';
import {routing} from '@/i18n/routing';

export const metadata: Metadata = {
  title: "Studio 36",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({locale}));
}

export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{locale: string}>;
}>) {
  const { locale } = await params;
  
  if (!routing.locales.includes(locale as any)) {
    notFound();
  }
  
  const messages = await getMessages();

  return (
    <html lang={locale} className="relative" suppressHydrationWarning>
      <body className="layout-grid relative px-4 lg:px-0 max-w-[100vw] overflow-x-hidden dark:bg-black dark:text-white transition-colors duration-300">
        <NextIntlClientProvider messages={messages}>
          <SmoothScroll>
            <Providers>
                <div className="layout-grid absolute top-0 left-0 w-full h-full pointer-events-none px-4 lg:px-0">
                  {[...Array(7)].map((_, index) => (
                  <div key={index} className={`-z-10 pointer-events-none relative w-full before:w-full before:absolute ${index > 2 ? "hidden lg:block" : "lg:block"} ${index === 0 ? "before:border-l lg:before:border-l-0" : "before:border-l"} z-[1] before:border-black before:dark:border-white before:dark:border-opacity-15 before:border-opacity-15 before:h-full ${index === 6 ? "before:border-r" : ""} ${index === 2 ? "before:border-r lg:before:border-r-0" : ""}`} ></div>
                  ))}
                </div>
                {children}
            </Providers>
          </SmoothScroll>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
